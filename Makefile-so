# Makefile template for dynamic library build

# Compiler and flags
CC = gcc
CFLAGS = -Wall -Wextra -g -fPIC
LDFLAGS = -shared

SRC_DIR = src
BUILD_DIR = build
TEST_DIR = test
LIB_NAME = liblibrary_name.so
TEST_TARGET = test_executable

SRCS = $(wildcard $(SRC_DIR)/*.c)
TEST_SRCS = $(wildcard $(TEST_DIR)/*.c)
OBJS = $(patsubst $(SRC_DIR)/%.c, $(BUILD_DIR)/%.o, $(SRCS))
TEST_OBJS = $(patsubst $(TEST_DIR)/%.c, $(BUILD_DIR)/%.o, $(TEST_SRCS))

all: $(LIB_NAME)

$(LIB_NAME): $(OBJS)
	$(CC) $(LDFLAGS) -o $@ $(OBJS)

test: $(TEST_TARGET)
	LD_LIBRARY_PATH=. ./$(TEST_TARGET)

$(TEST_TARGET): $(TEST_OBJS) $(LIB_NAME)
	$(CC) $(CFLAGS) -o $@ $(TEST_OBJS) -L. -llibrary_name

$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c | $(BUILD_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(BUILD_DIR)/%.o: $(TEST_DIR)/%.c | $(BUILD_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

clean:
	rm -rf $(BUILD_DIR) $(LIB_NAME) $(TEST_TARGET)

.PHONY: all test clean

